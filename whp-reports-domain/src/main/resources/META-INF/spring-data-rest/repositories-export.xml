<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="baseUri" class="java.net.URI">
        <constructor-arg value="http://localhost:9999/whp-reports"/>
    </bean>

    <bean id="config" class="org.springframework.data.rest.webmvc.RepositoryRestConfiguration"
          p:jsonpParamName="callback"
          p:jsonpOnErrParamName="errback"
          p:baseUri-ref="baseUri">
        <property name="domainTypeToRepositoryMappings">
            <map key-type="java.lang.Class" value-type="java.lang.Class">
                <entry key="org.motechproject.whp.reports.domain.measure.FlashingLog"
                       value="org.motechproject.whp.reports.repository.FlashingLogRepository"/>
            </map>
        </property>
    </bean>

    <!--
      If you need to add Converters to the REST exporter to handle the property types you're using
      in your entities, then just configure a ConversionServiceFactoryBean here, add the Converters
      you need, and they will, in turn, be added to the FormattingConversionService the REST exporter
      uses internally.

      Uncomment this block to add the included UUID <-> String converters, which are not included by default.
    -->
    <bean class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="org.springframework.data.rest.core.convert.StringToUUIDConverter"/>
                <bean class="org.springframework.data.rest.core.convert.UUIDToStringConverter"/>
            </set>
        </property>
    </bean>

    <!--
      The manual configuration (which doesn't look at the bean name) can be done by declaring the
      event listener instance yourself. It's significantly more XML, but if you need more control:
    -->
    <!--
    <bean class="org.springframework.data.rest.repository.context.ValidatingRepositoryEventListener">
      <property name="validators">
        <map>
          <entry key="beforeSave">
            <list>
              <bean class="org.springframework.data.rest.test.webmvc.PersonValidator"/>
            </list>
          </entry>
        </map>
      </property>
    </bean>
    -->

</beans>